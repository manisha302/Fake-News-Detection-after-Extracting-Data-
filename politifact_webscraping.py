# -*- coding: utf-8 -*-
"""politifact_webscraping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FN62FC2mycRLfTk0-Ym0z-K6_ADmUVjh
"""

import urllib.request,sys,re,time
from bs4 import BeautifulSoup
import requests
import pandas as pd

pagesToGet= 6


upperframe=[]  
for page in range(1,pagesToGet+1):
    print('processing page :', page)
    url = 'https://www.politifact.com/factchecks/list/?page='+str(page)
    
    
    #an exception might be thrown, so the code should be in a try-except block
    try:
        #use the browser to get the url. This is suspicious command that might blow up.
        page=requests.get(url)                             # this might throw an exception if something goes wrong.
        # response is equivalent to an enter key in chrome
    except Exception as e:                                   # this describes what to do if an exception is thrown
        error_type, error_obj, error_info = sys.exc_info()      # get the exception information
        print ('ERROR FOR LINK:',url)                          #print the link that cause the problem
        print (error_type, 'Line:', error_info.tb_lineno)     #print error info and line that threw the exception
        continue                                              #ignore this page. Abandon this and go back.
    
    
    
    
    time.sleep(2)   
    soup=BeautifulSoup(page.text,'html.parser')
    
    frame=[]
    
    links1=soup.find_all('div',attrs={'class':'m-statement__content'})

    
    for j in links1:
        
        f=j.find("img",attrs={'class':'c-image__original'}).get('alt')
           
        st=j.find("div",attrs={'class':'m-statement__quote'}).text
        
        s4=j.find('div',attrs={'class':'m-statement__body'})
        b=s4.find('footer').text.strip()
        
        
        
        frame.append([f,st.strip(),b])
    upperframe.extend(frame)

data=pd.DataFrame(upperframe)
data